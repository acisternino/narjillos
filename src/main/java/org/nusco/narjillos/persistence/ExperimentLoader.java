package org.nusco.narjillos.persistence;

import java.io.File;
import java.nio.file.Files;

import org.nusco.narjillos.core.utilities.Version;
import org.nusco.narjillos.experiment.Experiment;

public class ExperimentLoader {

	public static Experiment load(String fileName) {
		checkFile(fileName);
		checkVersion(fileName);
		ExperimentLog experimentLog = new ExperimentLog(stripExtension(fileName));
		Experiment result = experimentLog.load();
		result.timeStamp();
		return result;
	}

	private static void checkFile(String fileName) {
		if (!Files.exists(new File(fileName).toPath()))
			throw new RuntimeException("No file named " + fileName);
	}

	private static void checkVersion(String fileName) {
		String fileNameWithoutExtension = stripExtension(fileName);
		if (!fileNameWithoutExtension.matches("\\d+\\-\\d+\\.\\d+.\\d+\\w*")) {
			System.err.println("WARNING: This experiment doesn't contain a version in the filename. "
					+ "I cannot check that it was generated by the same version of Narjillos that you're using now.");
			return;
		}

		String experimentVersion = extractVersion(fileNameWithoutExtension);
		String applicationVersion = Version.read();
		if (!experimentVersion.equals(applicationVersion))
			System.err.println("WARNING: This experiment was started with version " + experimentVersion + ", not the current "
					+ applicationVersion + ". The results might be non-deterministic.");
	}

	private static String extractVersion(String fileName) {
		return fileName.substring(fileName.indexOf("-") + 1);
	}

	private static String stripExtension(String fileName) {
		return fileName.substring(0, fileName.lastIndexOf("."));
	}
}
